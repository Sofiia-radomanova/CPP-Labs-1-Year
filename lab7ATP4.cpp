#include <iostream>
#include <iomanip> 
#include <limits>
#define M 4 // рядки
#define N 4 // стовпці

using namespace std;

int main()
{
    //  Під час розв’язку задач 4 та 5 потрібно використати явну ініціалізацію елементів матриці.
    //  4. Дана цілочисельна матриця розміру MхN.Знайти номер останнього з її
    //  рядків, що містять максимальну кількість однакових елементів.
    cout << "Завдання 4" << '\n';

    // Явна ініціалізація масиву
    int A[M][N] = { {12, 1, 17, 177 }, {5, 7, 71, 8}, {9, 1, 9, 11}, {13, 13, 11, 13} };

    int  eqw_count = 0;
    int  prev_eqw_count = 0;
    int max_eqw_row = -1;

    // Вкладений цикл для перевірки умови: в якому рядку найбільше однакових чисел
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            eqw_count = 0; // Лічильник кількості однакових чисел для кожного рядка
            int elem = A[i][j];
            // Цикл порівняння кожного елементу рядка з іншими елементами рядка
            for (int k = 0; k < N; k++) {
                if (elem == A[i][k]) {
                    eqw_count++;
                }
                // Збереження найбільшого значення однокових елементів та відповідного рядка
                if (eqw_count >= prev_eqw_count) {
                    max_eqw_row = i + 1;
                    prev_eqw_count = eqw_count;
                }
            }

        }
    }

    // Виведення матриці
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            cout << setw(5) << A[i][j];
        }
        cout << endl;
    }
    // Виведення результатів
    cout << "Номер останнього рядка з максимальною кількістю однакових елементів : " << max_eqw_row << '\n';
    cout << "Кількість однакових елементів : " << prev_eqw_count << '\n';
    return 0;
}