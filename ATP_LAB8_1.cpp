#include <iostream>
#include <fstream>
#include <cmath>

int main()
{
    int V = ((20 + 7) % 5) ? (20 + 7) % 5 : 5;
    std::cout << "Радоманова Софія АнД-11 Варіант: " << V << '\n';
    std::cout << "Task 1\n";

     /*  Задані число N і набір з N дійсних чисел.Змінити значення в наборі за таким правилом : якщо число округлюється до
        більшого цілого, змінити в ньому знак, якщо до меншого – збільшити вдвічі.

         (Застосувати одномірний динамічний масив.Дані для введення мають знаходитися
            в текстовому файлі.В першому рядку файлу має бути записане ціле число, що визначає кількість елементів в 
            масиві.В другому рядку файлу мають йти самі елементи відповідної кількості.Отримані вхідні дані та результати
            розрахунку виводяться на екран.)*/


    // Відкриття файлу
    std::ifstream fin("input.txt");

    // Перевірка, чи файл відкрито успішно
    if (!fin.is_open()) 
    {
        std::cerr << "Файл не існує!\n";
        return 1;
    }

    // Зчитування кількості елементів масиву з файлу
    int N;
    fin >> N;

    // Динамічне виділення пам'яті на масив
    double* arr = new double[N];

    // Зчитування елементів масиву з файлу
    for (int i = 0; i < N; i++)
    {
        fin >> arr[i];
    }

    // Закриття файлу
    fin.close();

    // Обробка та виведення змінених елементів масиву
    for (int i = 0; i < N; i++) 
    {
        double roundedValue = std::round(arr[i]);
        int intValue = static_cast<int>(roundedValue);

        if (intValue > arr[i])
        {
            arr[i] *= -1;
        }
        else if (intValue < arr[i])
        {
            arr[i] *= 2;
        }

        std::cout << "Змінений " << i << " елемент масиву: " << arr[i] << '\n';
    }

    // Звільнення динамічної пам'яті
    delete[] arr;

    return 0;
}