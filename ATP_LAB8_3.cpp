
#include <iostream>
#include <fstream>
#include <cmath>
#include <iomanip>

int main()
{
    std::cout << "Task 3\n";
    //Задані цілі числа K, N, а також K наборів по N цілих чисел в кожному наборі.
//Для кожного набору вивести номер його останнього елемента, рівного 2, або
//число 0, якщо в даному наборі немає двійок.
//Застосувати двомірний динамічний масив(динамічна матриця).
//(Дані для введення мають знаходитися в текстовому файлі.В першому
//	рядку файлу має бути записані два цілі числа – кількість наборів К(рядків
//		матриці) та кількість чисел в кожному наборі N(кількість стовпців
//			матриці).В наступних рядках файлу мають йти самі елементи відповідної
//	кількості.
//	Отримані вхідні дані та результати розрахунку виводяться на екран.)



    std::ifstream fin("input3.txt");
    // Відкриття файлу

    if (!fin.is_open())
    {
        std::cerr << "Помилка відкриття файлу!\n";
        return 1;
    }


    int K;
    fin >> K; // Зчитування числа K з файлу (рядки)

    int N;
    fin >> N; // Зчитування числа N з файлу (стовпчики)


    // Динамічне виділення пам'яті на масив
    float** a; // подвійний покажчик на ціле
   
    // виділення пам’яті для першої розмірності
    a = new float* [K];
    // виділення пам’яті для елементів другої розмірності
    for (int i = 0; i < K; i++)
    {
        a[i] = new float[N];
    }

   
    for (int i = 0; i < K; i++)
    {
        for (int j = 0; j < N; j++)
        {
            fin >> a[i][j];
        }
    }


    std::cout << "Output matrix MxK \n";
    for (int i = 0; i < K; i++)
    {
        for (int j = 0; j < N; j++)
            std::cout << std:: setw(4) << a[i][j];
        std::cout << '\n';
    }


    // Пошук номерів останніх елементів, рівних 2
    for (int i = 0; i < K; i++) 
    {
        int last_index = -1; // Змінна для збереження номеру останнього елемента, рівного 2
        for (int j = 0; j < N; j++) 
        {
            if (a[i][j] == 2)
            {
                last_index = j;
            }
        }
        if (last_index == -1) 
        {
            std::cout << "0\n";
        }
        else 
        {
            std::cout << "У рядку " << i + 1 << " останній елемент, рівний 2, має номер: " << last_index + 1 << '\n';
        }
    }

    // Звільнення пам'яті
    for (int i = 0; i < K; i++) 
    {
        delete[] a[i];
    }
    delete[] a;

    fin.close(); // Закриття файлу



	return 0;
}






